<!DOCTYPE html>
<html lang="en">

<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

    <script type="text/javascript">
        const greenColor = '#8dceab';
        const redColor = '#e44c64';
        const yellowColor = '#fdd881';
        const greyColor = '#e1d9cc';

        const highIssuesCount = {{ highIssuesCount }};
        const mediumIssuesCount = {{ mediumIssuesCount }};
        const lowIssuesCount = {{ lowIssuesCount }};
        const totalCodeCount = {{ totalCodeCount }};

        const avgFileSize = {{ avgFileSize }};
        const avgFileSizeTitle = '{{ avgFileSizeTitle.range }}';

        google.charts.load('current', {'packages':['corechart', 'bar']});
        google.charts.setOnLoadCallback(drawCharts);

        function getProgrammingLanguagesDataArray() {
            return [
                ['Programming languages', 'index'],
                {% for file in topFiveLanguages -%}
                    ['{{ file.language }}', {{ file.count }}],
                {% endfor -%}
            ]
        }

        function getFileSizesDataArray() {
            return [
                ['File size range', 'count', { role: 'style' }],
                {% for fileSizeRange in fileSizeRanges -%}
                    ['{{ fileSizeRange.range }}', {{ fileSizeRange.count }}, '{{ fileSizeRange.color }}'],
                {% endfor -%}
            ]
        }

        function getMaintainabilityIndex() {
            let index =
                highIssuesCount * 10 +
                mediumIssuesCount * 1 +
                lowIssuesCount * 0.1;

            index = Math.max(index, 1);
            index = totalCodeCount / index;
            index = Math.log2(index);
            index = Math.round(index * 100) / 100;

            return index;
        }

        function drawCharts() {
            drawMaintainabilityIndex();
            drawIssuesChart();
            drawFileSizeChart();
            drawProgrammingLanguagesChart();
        }

        function drawProgrammingLanguagesChart() {
            const dataArray = getProgrammingLanguagesDataArray();
            const dataTable = new google.visualization.arrayToDataTable(dataArray);

            const chart = new google.visualization.PieChart(document.getElementById('programming-languages'));
            chart.draw(dataTable);
        }

        function drawMaintainabilityIndex() {
            const index = getMaintainabilityIndex();

            const dataArray = [
                ['Maintainability Index', 'index'],
                ['Index', index]
            ];

            const dataTable = new google.visualization.arrayToDataTable(dataArray);

            const options = {
                enableInteractivity: false,
                pieSliceText: 'value',
                pieHole: 0.75,
                pieSliceTextStyle: {
                    color: 'black',
                    fontSize: 21
                },
                slices: {
                    0: { color: greenColor }
                },
                width: 250,
                height: 200,
                legend: 'none'
            };

            if (index >= 4) {
                options.slices[0].color = greenColor;
                document.getElementById('maintainability-title').innerText = 'This level is considered as good';
            }
            else if (index >= 2) {
                options.slices[0].color = yellowColor;
                document.getElementById('maintainability-title').innerText = 'This level is considered as normal';
            }
            else {
                options.slices[0].color = redColor;
                document.getElementById('maintainability-title').innerText = 'This level is considered as bad';
            }

            const chart = new google.visualization.PieChart(document.getElementById('maintainability-index'));
            chart.draw(dataTable, options);
        }

        function drawIssuesChart() {
            const dataArray = [
                ['Issue name', 'count'],
                ['High', highIssuesCount],
                ['Medium', mediumIssuesCount],
                ['Low', lowIssuesCount],
            ];
            const data = new google.visualization.arrayToDataTable(dataArray);

            const options = {
                legend: 'none',
                pieSliceText: 'none',
                slices: {
                    0: { color: redColor },
                    1: { color: yellowColor },
                    2: { color: greyColor }
                }
            };

            const chart = new google.visualization.PieChart(document.getElementById('issues'));
            chart.draw(data, options);

            document.getElementById('high-issues-count').innerText = highIssuesCount;
            document.getElementById('medium-issues-count').innerText = mediumIssuesCount;
            document.getElementById('low-issues-count').innerText = lowIssuesCount;
        }

        function drawFileSizeChart() {
            const dataArray = getFileSizesDataArray();
            const data = new google.visualization.arrayToDataTable(dataArray);

            const options = {
                width: 400,
                height: 200,
                bar: {groupWidth: "95%"},
                legend: { position: "none" },
            };

            const chart = new google.visualization.ColumnChart(document.getElementById('file-size'));
            chart.draw(data, options);

            document.getElementById('file-size-title').innerText = avgFileSizeTitle;
        }
    </script>

    <style>
        h2 {
            margin: 2.0pt 0 0;
            line-height: 107%;
            font-size: 13.0pt;
            font-family: "Calibri Light", sans-serif;
            color: #27344C;
            font-weight: bolder;
        }

        p {
            margin: 0;
        }

        .godel-table th {
            background-color: #4F81BD;
            color: white;
            border-bottom: 1px solid;
        }

        .godel-table tbody tr:nth-child(odd) {
            background-color: #E9EDF4;
        }

        .godel-table tbody tr:nth-child(even) {
            background-color: #D0D8E8;
        }

        .width-100 {
            width: 100%;
        }

        .text-align-center {
            text-align: center;
        }

        .background-color-red {
            background-color: #e44c64;
        }

        .background-color-yellow {
            background-color: #fdd881;
        }

        .background-color-grey {
            background-color: #e1d9cc;
        }

        .pie-chart {
            width: 450px;
            height: 250px;
        }

        .column {
            float: left;
        }

        .row:after {
            content: "";
            display: table;
            clear: both;
        }

        .dot {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            display: inline-block;
        }
    </style>

</head>

<body onload="onLoad()">
<div>
    <div class="row">
        <!-- Maintainability index -->
        <div class="column">
            <h2 class="text-align-center">Maintainability index</h2>
            <div style="display: flex; flex-direction: column; align-items: center; text-align: center;">
                <div id="maintainability-index"></div>
                <div>
                    <p id="maintainability-title" style="margin: 0;"></p>
                </div>
            </div>
        </div>

        <!-- Issues -->
        <div class="column">
            <h2 class="text-align-center">Issues</h2>
            <div style="display: flex;">
                <div id="issues" style="width: 250px; height: 250px;"></div>
                <div style="display: flex; flex-direction: column; align-items: center;">
                    <table style="width: 250px; height: 100px;">
                        <tr>
                            <th style="border-bottom: 2px solid; width: 70%; font-weight: normal;">Severity</th>
                            <th style="border-bottom: 2px solid; font-weight: normal;">Count</th>
                        </tr>
                        <tr>
                            <td>
                                <div style="display: flex; align-items: center;">
                                    <span class="dot background-color-red"></span>
                                    <p style="font-size: small; margin-left: 5px;">High</p>
                                </div>
                            </td>
                            <td id="high-issues-count"></td>
                        </tr>
                        <tr>
                            <td>
                                <div style="display: flex; align-items: center;">
                                    <span class="dot background-color-yellow"></span>
                                    <p style="font-size: small; margin-left: 5px;">Medium</p>
                                </div>
                            </td>
                            <td id="medium-issues-count"></td>
                        </tr>
                        <tr>
                            <td>
                                <div style="display: flex; align-items: center;">
                                    <span class="dot background-color-grey"></span>
                                    <p style="font-size: small; margin-left: 5px;">Low</p>
                                </div>
                            </td>
                            <td id="low-issues-count"></td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>

        <!-- File size -->
        <div class="column">
            <h2 class="text-align-center">File size</h2>
            <div style="display: flex; flex-direction: column; align-items: center; text-align: center;">
                <div id="file-size"></div>
                <div>
                    <p id="file-size-title" style="margin: 0; word-break: break-word;"></p>
                </div>
            </div>
        </div>

        <!-- Programming languages -->
        <div class="column">
            <h2 class="text-align-center">Programming languages</h2>
            <div id="programming-languages" style="width: 350px; height: 250px;"></div>
        </div>
    </div>
    <div>
        <h2 class="text-align-center">Top 5 of most severe issues</h2>

        <table class="width-100 godel-table">
            <tr>
                <th>Issue ID</th>
                <th>Severity</th>
                <th>Title</th>
                <th>Description</th>
                <th>Count</th>
            </tr>
            {% for issue in topFiveSevereIssues -%}
                <tr>
                    <td>
                        <p>{{ issue.ruleId }}</p>
                    </td>
                    <td>
                        <p>{{ issue.level }}</p>
                    </td>
                    <td>
                        <p>{{ issue.title | escape }}</p>
                    </td>
                    <td>
                        <p>{{ issue.description | escape }}</p>
                    </td>
                    <td>
                        <p>{{ issue.count }}</p>
                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>

    <div>
        <h2 class="text-align-center">Top 5 of most frequent issues</h2>

        <table class="width-100 godel-table">
            <tr>
                <th>Issue ID</th>
                <th>Severity</th>
                <th>Title</th>
                <th>Description</th>
                <th>Count</th>
            </tr>
            {% for issue in topFiveFrequentIssues -%}
                <tr>
                    <td>
                        <p>{{ issue.ruleId }}</p>
                    </td>
                    <td>
                        <p>{{ issue.level }}</p>
                    </td>
                    <td>
                        <p>{{ issue.title | escape }}</p>
                    </td>
                    <td>
                        <p>{{ issue.description | escape }}</p>
                    </td>
                    <td>
                        <p>{{ issue.count }}</p>
                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>
</div>
</body>
</html>